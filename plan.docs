-- Check the test case side bar if it also includes the hidden test cases and description ( just make sure we have it)

-- Create a timer for the Exam. Put it on the topbar
- make sure that the time we are getting is from the database which is located on exams table
its name is `duration` int DEFAULT '60' COMMENT 'Duration in minutes',

-- Create an Instruction page: showing the Exam TITLE and DESCRIPTION, along side the rules of the exam, make sure to align the design
properly to our current desing on our files. 
- the exam TITLE and DESCRIPTION should be connected to our exams also so check the @exams.sql file for our tables like exams etc. 

-- Make the submit button work properly. Lets first create the tables we need for saving the exam. Make sure nothing left our as for our question like programming, true or false and multiple choice since we will be needing it 
for analytics later on, and ofcourse reference it to the exam table and question table so that we can fetch it later on that is connected to the exam


<?php
    session_start(); // Start session if needed

// Check if user is logged in as admin
if (!isset($_SESSION['is_admin']) || $_SESSION['is_admin'] !== true) {
    // Not logged in as admin, redirect to admin login page
    header("Location: admin_login.php");
    exit();
}

// Include database connection
include('config/config.php');

// Fetch Student Statistics
$stats = [];

// Total Students
$query = "SELECT COUNT(*) as total FROM register_studentsqe";
$result = $conn->query($query);
$stats['total_students'] = $result->fetch_assoc()['total'];

// Qualified Students
$query = "SELECT COUNT(*) as qualified FROM register_studentsqe WHERE status = 'accepted'";
$result = $conn->query($query);
$stats['qualified_students'] = $result->fetch_assoc()['qualified'];

// Pending Students
$query = "SELECT COUNT(*) as pending FROM register_studentsqe WHERE status = 'pending'";
$result = $conn->query($query);
$stats['pending_students'] = $result->fetch_assoc()['pending'];

// Exam Statistics
$query = "SELECT 
    COUNT(*) as total_exams,
    SUM(CASE WHEN exam_type = 'tech' THEN 1 ELSE 0 END) as technical_exams,
    SUM(CASE WHEN exam_type = 'non-tech' THEN 1 ELSE 0 END) as non_technical_exams,
    SUM(CASE WHEN is_scheduled = 1 THEN 1 ELSE 0 END) as scheduled_exams
FROM exams";
$result = $conn->query($query);
$exam_stats = $result->fetch_assoc();
$stats = array_merge($stats, $exam_stats);

// Question Bank Total
$query = "SELECT COUNT(*) as total FROM question_bank";
$result = $conn->query($query);
$stats['question_bank_total'] = $result->fetch_assoc()['total'];

// Exam Results Statistics
$query = "SELECT 
    COUNT(*) as total_attempts,
    SUM(CASE WHEN passed = 1 THEN 1 ELSE 0 END) as passed_count,
    SUM(CASE WHEN passed = 0 THEN 1 ELSE 0 END) as failed_count
FROM exam_assignments 
WHERE completion_status = 'completed'";
$result = $conn->query($query);
$exam_results = $result->fetch_assoc();

// Set default values if no results yet
$stats['total_attempts'] = $exam_results['total_attempts'] ?? 0;
$stats['passed_count'] = $exam_results['passed_count'] ?? 0;
$stats['failed_count'] = $exam_results['failed_count'] ?? 0;

// Calculate pass rate
$stats['pass_rate'] = $stats['total_attempts'] > 0 
    ? round(($stats['passed_count'] / $stats['total_attempts']) * 100) 
    : 0;

// Recent registrations
$query = "SELECT * FROM register_studentsqe 
          ORDER BY registration_date DESC 
          LIMIT 5";
$recent_registrations = $conn->query($query);

// Recent announcements
$query = "SELECT * FROM announcements 
          WHERE status = 'active' 
          ORDER BY created_at DESC 
          LIMIT 5";
$recent_announcements = $conn->query($query);

// Upcoming exams
$query = "SELECT 
            e.exam_id, 
            e.title, 
            e.exam_type, 
            e.scheduled_date, 
            e.scheduled_time, 
            e.duration, 
            e.description
          FROM exams e 
          WHERE e.is_scheduled = 1 
            AND e.scheduled_date >= CURDATE() 
          ORDER BY e.scheduled_date ASC, e.scheduled_time ASC 
          LIMIT 5";
$upcoming_exams = $conn->query($query);
?>