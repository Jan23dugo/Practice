2025-03-19 08:24:18 - Starting code execution

2025-03-19 08:24:18 - Received parameters
Data: Array
(
    [programming_id] => 5
    [code] => def sum_numbers(a, b):
    return a + b
    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:24:18 - Processing test case
Data: Array
(
    [test_case_id] => 8
    [programming_id] => 5
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:24:18 - Submitting to Judge0
Data: Array
(
    [language_id] => 71
    [source_code] => def sum_numbers(a, b):
def sum_numbers(a, b):
    return a + b

# Input handling
input_values = input().strip().split()
a, b = map(int, input_values)
result = sum_numbers(a, b)
print(result)
    [stdin] => 1 2
    [wait] => 1
)


2025-03-19 08:24:19 - Judge0 Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
    [curlError] => 
)


2025-03-19 08:24:19 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


2025-03-19 08:26:27 - Starting code execution

2025-03-19 08:26:27 - Received parameters
Data: Array
(
    [programming_id] => 5
    [code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation
    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:26:27 - Processing test case
Data: Array
(
    [test_case_id] => 8
    [programming_id] => 5
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:26:27 - Submitting code to Judge0
Data: Array
(
    [code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation

# Get input and process it
try:
    input_str = input().strip()
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(result)
except Exception as e:
    print(f"Error: {str(e)}")
    [input] => 1 2
)


2025-03-19 08:26:28 - Judge0 Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
)


2025-03-19 08:26:28 - Test case result
Data: Array
(
    [actual_output] => 
    [expected_output] => 3
    [passed] => 
)


2025-03-19 08:26:28 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


2025-03-19 08:26:46 - Starting code execution

2025-03-19 08:26:46 - Received parameters
Data: Array
(
    [programming_id] => 5
    [code] => def sum_numbers(a, b):
    return a + b

# Take user input
a, b = map(int, input().split())

# Call the function and print the result
print(sum_numbers(a, b))

    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:26:46 - Processing test case
Data: Array
(
    [test_case_id] => 8
    [programming_id] => 5
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:26:46 - Submitting code to Judge0
Data: Array
(
    [code] => def sum_numbers(a, b):
    return a + b

# Take user input
a, b = map(int, input().split())

# Call the function and print the result
print(sum_numbers(a, b))

# Get input and process it
try:
    input_str = input().strip()
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(result)
except Exception as e:
    print(f"Error: {str(e)}")
    [input] => 1 2
)


2025-03-19 08:26:47 - Judge0 Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
)


2025-03-19 08:26:47 - Test case result
Data: Array
(
    [actual_output] => 
    [expected_output] => 3
    [passed] => 
)


2025-03-19 08:26:47 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


2025-03-19 08:29:57 - Starting code execution

2025-03-19 08:29:57 - Received parameters
Data: Array
(
    [programming_id] => 5
    [code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation
    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:29:57 - Processing test case
Data: Array
(
    [test_case_id] => 8
    [programming_id] => 5
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:29:57 - Original code received
Data: Array
(
    [code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation
)


2025-03-19 08:29:57 - Complete code to be submitted
Data: Array
(
    [complete_code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
)


2025-03-19 08:29:57 - Submitting request to Judge0
Data: Array
(
    [api_url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
    [data] => Array
        (
            [language_id] => 71
            [source_code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
            [stdin] => 1 2
            [wait] => 1
            [memory_limit] => 262144
            [cpu_time_limit] => 5
        )

)


2025-03-19 08:29:57 - Judge0 Raw Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
    [curl_error] => 
    [curl_info] => Array
        (
            [url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
            [content_type] => application/json
            [http_code] => 429
            [header_size] => 715
            [request_size] => 0
            [filetime] => -1
            [ssl_verify_result] => 20
            [redirect_count] => 0
            [total_time] => 0.513847
            [namelookup_time] => 0.094366
            [connect_time] => 0.168628
            [pretransfer_time] => 0.431689
            [size_upload] => 559
            [size_download] => 169
            [speed_download] => 328
            [speed_upload] => 1087
            [download_content_length] => -1
            [upload_content_length] => 559
            [starttransfer_time] => 0.51293
            [redirect_time] => 0
            [redirect_url] => 
            [primary_ip] => 52.220.24.157
            [certinfo] => Array
                (
                )

            [primary_port] => 443
            [local_ip] => 192.168.100.6
            [local_port] => 49639
            [http_version] => 3
            [protocol] => 2
            [ssl_verifyresult] => 0
            [scheme] => HTTPS
            [appconnect_time_us] => 425425
            [connect_time_us] => 168628
            [namelookup_time_us] => 94366
            [pretransfer_time_us] => 431689
            [redirect_time_us] => 0
            [starttransfer_time_us] => 512930
            [total_time_us] => 513847
            [effective_method] => POST
            [capath] => 
            [cainfo] => 
        )

)


2025-03-19 08:29:57 - Decoded Judge0 Response
Data: Array
(
    [stdout] => null
    [stderr] => null
    [status] => null
    [memory] => null
    [time] => null
)


2025-03-19 08:29:57 - Judge0 execution result
Data: Array
(
    [stdout] => 
    [stderr] => 
    [status] => 
)


2025-03-19 08:29:57 - Test case comparison
Data: Array
(
    [actual_output] => 
    [expected_output] => 3
    [passed] => 
)


2025-03-19 08:29:57 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


2025-03-19 08:33:02 - Starting code execution

2025-03-19 08:33:02 - Received parameters
Data: Array
(
    [programming_id] => 4
    [code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation
    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:33:02 - Processing test case
Data: Array
(
    [test_case_id] => 7
    [programming_id] => 4
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:33:02 - Original code received
Data: Array
(
    [code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation
)


2025-03-19 08:33:02 - Complete code to be submitted
Data: Array
(
    [complete_code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
)


2025-03-19 08:33:02 - Submitting request to Judge0
Data: Array
(
    [api_url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
    [data] => Array
        (
            [language_id] => 71
            [source_code] => def sum_numbers(a, b):
    # Write your code here to add two numbers
    return a + b  # This is the actual implementation

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
            [stdin] => 1 2
            [wait] => 1
            [memory_limit] => 262144
            [cpu_time_limit] => 5
        )

)


2025-03-19 08:33:02 - Judge0 Raw Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
    [curl_error] => 
    [curl_info] => Array
        (
            [url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
            [content_type] => application/json
            [http_code] => 429
            [header_size] => 715
            [request_size] => 0
            [filetime] => -1
            [ssl_verify_result] => 20
            [redirect_count] => 0
            [total_time] => 0.46391
            [namelookup_time] => 0.066388
            [connect_time] => 0.152985
            [pretransfer_time] => 0.388412
            [size_upload] => 559
            [size_download] => 169
            [speed_download] => 364
            [speed_upload] => 1204
            [download_content_length] => -1
            [upload_content_length] => 559
            [starttransfer_time] => 0.463765
            [redirect_time] => 0
            [redirect_url] => 
            [primary_ip] => 52.220.24.157
            [certinfo] => Array
                (
                )

            [primary_port] => 443
            [local_ip] => 192.168.100.6
            [local_port] => 49698
            [http_version] => 3
            [protocol] => 2
            [ssl_verifyresult] => 0
            [scheme] => HTTPS
            [appconnect_time_us] => 387535
            [connect_time_us] => 152985
            [namelookup_time_us] => 66388
            [pretransfer_time_us] => 388412
            [redirect_time_us] => 0
            [starttransfer_time_us] => 463765
            [total_time_us] => 463910
            [effective_method] => POST
            [capath] => 
            [cainfo] => 
        )

)


2025-03-19 08:33:02 - Decoded Judge0 Response
Data: Array
(
    [stdout] => null
    [stderr] => null
    [status] => null
    [memory] => null
    [time] => null
)


2025-03-19 08:33:02 - Judge0 execution result
Data: Array
(
    [stdout] => 
    [stderr] => 
    [status] => 
)


2025-03-19 08:33:02 - Test case comparison
Data: Array
(
    [actual_output] => 
    [expected_output] => 3
    [passed] => 
)


2025-03-19 08:33:02 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


2025-03-19 08:33:17 - Starting code execution

2025-03-19 08:33:17 - Received parameters
Data: Array
(
    [programming_id] => 4
    [code] => 

   
    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:33:17 - Processing test case
Data: Array
(
    [test_case_id] => 7
    [programming_id] => 4
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:33:17 - Original code received
Data: Array
(
    [code] => 
)


2025-03-19 08:33:17 - Complete code to be submitted
Data: Array
(
    [complete_code] => 

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
)


2025-03-19 08:33:17 - Submitting request to Judge0
Data: Array
(
    [api_url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
    [data] => Array
        (
            [language_id] => 71
            [source_code] => 

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
            [stdin] => 1 2
            [wait] => 1
            [memory_limit] => 262144
            [cpu_time_limit] => 5
        )

)


2025-03-19 08:33:17 - Judge0 Raw Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
    [curl_error] => 
    [curl_info] => Array
        (
            [url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
            [content_type] => application/json
            [http_code] => 429
            [header_size] => 715
            [request_size] => 0
            [filetime] => -1
            [ssl_verify_result] => 20
            [redirect_count] => 0
            [total_time] => 0.308352
            [namelookup_time] => 0.003763
            [connect_time] => 0.07638
            [pretransfer_time] => 0.225588
            [size_upload] => 435
            [size_download] => 169
            [speed_download] => 548
            [speed_upload] => 1410
            [download_content_length] => -1
            [upload_content_length] => 435
            [starttransfer_time] => 0.308255
            [redirect_time] => 0
            [redirect_url] => 
            [primary_ip] => 52.220.24.157
            [certinfo] => Array
                (
                )

            [primary_port] => 443
            [local_ip] => 192.168.100.6
            [local_port] => 49705
            [http_version] => 3
            [protocol] => 2
            [ssl_verifyresult] => 0
            [scheme] => HTTPS
            [appconnect_time_us] => 225226
            [connect_time_us] => 76380
            [namelookup_time_us] => 3763
            [pretransfer_time_us] => 225588
            [redirect_time_us] => 0
            [starttransfer_time_us] => 308255
            [total_time_us] => 308352
            [effective_method] => POST
            [capath] => 
            [cainfo] => 
        )

)


2025-03-19 08:33:17 - Decoded Judge0 Response
Data: Array
(
    [stdout] => null
    [stderr] => null
    [status] => null
    [memory] => null
    [time] => null
)


2025-03-19 08:33:17 - Judge0 execution result
Data: Array
(
    [stdout] => 
    [stderr] => 
    [status] => 
)


2025-03-19 08:33:17 - Test case comparison
Data: Array
(
    [actual_output] => 
    [expected_output] => 3
    [passed] => 
)


2025-03-19 08:33:17 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


2025-03-19 08:33:18 - Starting code execution

2025-03-19 08:33:18 - Received parameters
Data: Array
(
    [programming_id] => 4
    [code] => 

   
    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:33:18 - Processing test case
Data: Array
(
    [test_case_id] => 7
    [programming_id] => 4
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:33:18 - Original code received
Data: Array
(
    [code] => 
)


2025-03-19 08:33:18 - Complete code to be submitted
Data: Array
(
    [complete_code] => 

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
)


2025-03-19 08:33:18 - Submitting request to Judge0
Data: Array
(
    [api_url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
    [data] => Array
        (
            [language_id] => 71
            [source_code] => 

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
            [stdin] => 1 2
            [wait] => 1
            [memory_limit] => 262144
            [cpu_time_limit] => 5
        )

)


2025-03-19 08:33:19 - Judge0 Raw Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
    [curl_error] => 
    [curl_info] => Array
        (
            [url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
            [content_type] => application/json
            [http_code] => 429
            [header_size] => 715
            [request_size] => 0
            [filetime] => -1
            [ssl_verify_result] => 20
            [redirect_count] => 0
            [total_time] => 0.352564
            [namelookup_time] => 0.009084
            [connect_time] => 0.09808
            [pretransfer_time] => 0.259469
            [size_upload] => 435
            [size_download] => 169
            [speed_download] => 479
            [speed_upload] => 1233
            [download_content_length] => -1
            [upload_content_length] => 435
            [starttransfer_time] => 0.352426
            [redirect_time] => 0
            [redirect_url] => 
            [primary_ip] => 52.220.24.157
            [certinfo] => Array
                (
                )

            [primary_port] => 443
            [local_ip] => 192.168.100.6
            [local_port] => 49709
            [http_version] => 3
            [protocol] => 2
            [ssl_verifyresult] => 0
            [scheme] => HTTPS
            [appconnect_time_us] => 259213
            [connect_time_us] => 98080
            [namelookup_time_us] => 9084
            [pretransfer_time_us] => 259469
            [redirect_time_us] => 0
            [starttransfer_time_us] => 352426
            [total_time_us] => 352564
            [effective_method] => POST
            [capath] => 
            [cainfo] => 
        )

)


2025-03-19 08:33:19 - Decoded Judge0 Response
Data: Array
(
    [stdout] => null
    [stderr] => null
    [status] => null
    [memory] => null
    [time] => null
)


2025-03-19 08:33:19 - Judge0 execution result
Data: Array
(
    [stdout] => 
    [stderr] => 
    [status] => 
)


2025-03-19 08:33:19 - Test case comparison
Data: Array
(
    [actual_output] => 
    [expected_output] => 3
    [passed] => 
)


2025-03-19 08:33:19 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


2025-03-19 08:33:22 - Starting code execution

2025-03-19 08:33:22 - Received parameters
Data: Array
(
    [programming_id] => 4
    [code] => gh

   
    [is_manual] => 
    [manual_input] => 
)


2025-03-19 08:33:22 - Processing test case
Data: Array
(
    [test_case_id] => 7
    [programming_id] => 4
    [input] => 1 2
    [expected_output] => 3
    [is_hidden] => 0
    [description] => 
)


2025-03-19 08:33:22 - Original code received
Data: Array
(
    [code] => gh
)


2025-03-19 08:33:22 - Complete code to be submitted
Data: Array
(
    [complete_code] => gh

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
)


2025-03-19 08:33:22 - Submitting request to Judge0
Data: Array
(
    [api_url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
    [data] => Array
        (
            [language_id] => 71
            [source_code] => gh

# Get input and process it
try:
    input_str = input().strip()
    logDebug("Input received:", input_str)
    a, b = map(int, input_str.split())
    result = sum_numbers(a, b)
    print(str(result))  # Explicitly convert to string
except Exception as e:
    import sys
    print(f"Error: {str(e)}", file=sys.stderr)
            [stdin] => 1 2
            [wait] => 1
            [memory_limit] => 262144
            [cpu_time_limit] => 5
        )

)


2025-03-19 08:33:23 - Judge0 Raw Response
Data: Array
(
    [httpCode] => 429
    [response] => {"message":"You have exceeded the DAILY quota for Submissions on your current plan, BASIC. Upgrade your plan at https:\/\/rapidapi.com\/judge0-official\/api\/judge0-ce"}
    [curl_error] => 
    [curl_info] => Array
        (
            [url] => https://judge0-ce.p.rapidapi.com/submissions?base64_encoded=false&wait=true
            [content_type] => application/json
            [http_code] => 429
            [header_size] => 715
            [request_size] => 0
            [filetime] => -1
            [ssl_verify_result] => 20
            [redirect_count] => 0
            [total_time] => 0.310356
            [namelookup_time] => 0.003185
            [connect_time] => 0.07613
            [pretransfer_time] => 0.227233
            [size_upload] => 437
            [size_download] => 169
            [speed_download] => 544
            [speed_upload] => 1408
            [download_content_length] => -1
            [upload_content_length] => 437
            [starttransfer_time] => 0.310224
            [redirect_time] => 0
            [redirect_url] => 
            [primary_ip] => 52.220.24.157
            [certinfo] => Array
                (
                )

            [primary_port] => 443
            [local_ip] => 192.168.100.6
            [local_port] => 49713
            [http_version] => 3
            [protocol] => 2
            [ssl_verifyresult] => 0
            [scheme] => HTTPS
            [appconnect_time_us] => 226526
            [connect_time_us] => 76130
            [namelookup_time_us] => 3185
            [pretransfer_time_us] => 227233
            [redirect_time_us] => 0
            [starttransfer_time_us] => 310224
            [total_time_us] => 310356
            [effective_method] => POST
            [capath] => 
            [cainfo] => 
        )

)


2025-03-19 08:33:23 - Decoded Judge0 Response
Data: Array
(
    [stdout] => null
    [stderr] => null
    [status] => null
    [memory] => null
    [time] => null
)


2025-03-19 08:33:23 - Judge0 execution result
Data: Array
(
    [stdout] => 
    [stderr] => 
    [status] => 
)


2025-03-19 08:33:23 - Test case comparison
Data: Array
(
    [actual_output] => 
    [expected_output] => 3
    [passed] => 
)


2025-03-19 08:33:23 - Final response
Data: Array
(
    [success] => 1
    [results] => Array
        (
            [0] => Array
                (
                    [passed] => 
                    [hidden] => 
                    [input] => 1 2
                    [expected] => 3
                    [output] => 
                )

        )

)


